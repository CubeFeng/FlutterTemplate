# This file is a template, and might need editing before it works on your project.
# This is a very simple template that mainly relies on FastLane to build and distribute your app.
# Read more about how to use this template on the blog post https://about.gitlab.com/2019/03/06/ios-publishing-with-gitlab-and-fastlane/
# You will also need fastlane and signing configuration for this to work, along with a MacOS runner.
# These details are provided in the blog post.

# Note that when you're using the shell executor for MacOS builds, the
# build and tests run as the identity of the runner logged in user, directly on
# the build host. This is less secure than using container executors, so please
# take a look at our security implications documentation at
# https://docs.gitlab.com/runner/security/#usage-of-shell-executor for additional
# detail on what to keep in mind in this scenario.

stages:
   - build
   - upload
   - deploy

variables:
    LC_ALL: "en_US.UTF-8"
    LANG: "en_US.UTF-8"
    GIT_STRATEGY: "fetch"

build:ios:
    stage: build
    script:
        - cd app && fastlane build_flutter_app platform:iOS apiEnv:$API_ENV
    rules:
        - if: '$PLATFORM != "Android" && $FLAG == "1000"'
          when: always
    tags:
        - macOS
    artifacts:
        paths:
            - app/app_builds/
            - app/app_builds_config/

build:android:
    stage: build
    script:
        - cd app && fastlane build_flutter_app platform:Android apiEnv:$API_ENV
    rules:
        - if: '$PLATFORM != "iOS" && $FLAG == "1000"'
          when: always
    tags:
        - MacOS4
    artifacts:
        paths:
            - app/app_builds/
            - app/app_builds_config/

build:commit:
    stage: build
    script:
        - cd app && fastlane commit_change
    rules:
        - if: '$FLAG == "1000"'
          when: always
    tags:
        - Ubuntu
    image: ssh_fastlane:latest

upload:ipa:
    stage: upload
    script:
        - cd app && fastlane upload_app platform:iOS
    rules:
        - if: '$PLATFORM != "Android" && $FLAG == "1000"'
          when: always
    tags:
        - Ubuntu
    image: ssh_fastlane:latest
    dependencies:
        - build:ios
    artifacts:
        paths:
            - app/app_builds_config/

upload:apk:
    stage: upload
    script:
        - cd app && fastlane upload_app platform:Android
    rules:
        - if: '$PLATFORM != "iOS" && $FLAG == "1000"'
          when: always
    tags:
        - Ubuntu
    image: ssh_fastlane:latest
    dependencies:
        - build:android
    artifacts:
        paths:
            - app/app_builds_config/

deploy:ios:
    stage: deploy
    script:
        - cd app && fastlane release_app id:$CI_PIPELINE_ID platform:iOS
    rules:
        - if: '$PLATFORM != "Android" && $FLAG == "1000"'
          when: always
    tags:
        - Ubuntu
    image: ssh_fastlane:latest
    dependencies:
        - upload:ipa

deploy:android:
    stage: deploy
    script:
        - cd app && fastlane release_app id:$CI_PIPELINE_ID platform:Android
    rules:
        - if: '$PLATFORM != "iOS" && $FLAG == "1000"'
          when: always
    tags:
        - Ubuntu
    image: ssh_fastlane:latest
    dependencies:
        - upload:apk
